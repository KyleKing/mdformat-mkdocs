# serializer version: 1
# name: test_parsed_result[Combination list]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='* item 2',
          indent='    ',
          line_num=1,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='* item 2',
            indent='    ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. item 3',
          indent='        ',
          line_num=2,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '- item 1',
      ),
      tuple(
        '    ',
        '- item 2',
      ),
      tuple(
        '        ',
        '1. item 3',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Corrected Indentation from 3x]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      None,
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 2',
          indent='   ',
          line_num=1,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='   ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 3',
          indent='      ',
          line_num=2,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='   ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 3',
            indent='      ',
            line_num=2,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 4',
          indent='         ',
          line_num=3,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '- item 1',
      ),
      tuple(
        '    ',
        '- item 2',
      ),
      tuple(
        '        ',
        '- item 3',
      ),
      tuple(
        '            ',
        '- item 4',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Correctly identifies peers when numbering]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      None,
      None,
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='1. One',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. One',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. 1-A',
          indent='    ',
          line_num=1,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='2. Two',
          indent='',
          line_num=2,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='1. One',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='2. Two',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. 2-A',
          indent='    ',
          line_num=3,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='2. Two',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='2. 2-B',
          indent='    ',
          line_num=4,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='1. 2-A',
            indent='    ',
            line_num=3,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '1. One',
      ),
      tuple(
        '    ',
        '1. 1-A',
      ),
      tuple(
        '',
        '1. Two',
      ),
      tuple(
        '    ',
        '1. 2-A',
      ),
      tuple(
        '    ',
        '1. 2-B',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Dashed list]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 2',
          indent='    ',
          line_num=1,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '- item 1',
      ),
      tuple(
        '    ',
        '- item 2',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Deterministic HTML Formatting]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      None,
      BlockIndent(
        indent_depth=1,
        kind='HTML',
        raw_indent='    ',
        start_line=3,
      ),
      BlockIndent(
        indent_depth=1,
        kind='HTML',
        raw_indent='    ',
        start_line=3,
      ),
      BlockIndent(
        indent_depth=1,
        kind='HTML',
        raw_indent='    ',
        start_line=3,
      ),
      BlockIndent(
        indent_depth=1,
        kind='HTML',
        raw_indent='    ',
        start_line=3,
      ),
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='??? info "Full-size Image"',
          indent='',
          line_num=0,
          syntax=<Syntax.START_MARKED: 'START_MARKED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='??? info "Full-size Image"',
            indent='',
            line_num=0,
            syntax=<Syntax.START_MARKED: 'START_MARKED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='There are no additional steps required if keeping full size image.',
          indent='    ',
          line_num=1,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=2,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='??? info "Full-size Image"',
            indent='',
            line_num=0,
            syntax=<Syntax.START_MARKED: 'START_MARKED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='<figure markdown>',
          indent='    ',
          line_num=3,
          syntax=<Syntax.HTML: 'HTML'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='??? info "Full-size Image"',
            indent='',
            line_num=0,
            syntax=<Syntax.START_MARKED: 'START_MARKED'>,
          ),
          ParsedLine(
            content='<figure markdown>',
            indent='    ',
            line_num=3,
            syntax=<Syntax.HTML: 'HTML'>,
          ),
        ]),
        parsed=ParsedLine(
          content='![Example Full size Isolated Object Image Black Background](https://github.com/ultralytics/ultralytics/assets/62214284/845c00d0-52a6-4b1e-8010-4ba73e011b99){ width=240 }',
          indent='         ',
          line_num=4,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='??? info "Full-size Image"',
            indent='',
            line_num=0,
            syntax=<Syntax.START_MARKED: 'START_MARKED'>,
          ),
          ParsedLine(
            content='<figure markdown>',
            indent='    ',
            line_num=3,
            syntax=<Syntax.HTML: 'HTML'>,
          ),
        ]),
        parsed=ParsedLine(
          content='<figcaption>Example full-size output</figcaption>',
          indent='       ',
          line_num=5,
          syntax=<Syntax.HTML: 'HTML'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='??? info "Full-size Image"',
            indent='',
            line_num=0,
            syntax=<Syntax.START_MARKED: 'START_MARKED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='</figure>',
          indent='    ',
          line_num=6,
          syntax=<Syntax.HTML: 'HTML'>,
        ),
        prev_list_peers=list([
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '??? info "Full-size Image"',
      ),
      tuple(
        '    ',
        'There are no additional steps required if keeping full size image.',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '    ',
        '<figure markdown>',
      ),
      tuple(
        '    ',
        '![Example Full size Isolated Object Image Black Background](https://github.com/ultralytics/ultralytics/assets/62214284/845c00d0-52a6-4b1e-8010-4ba73e011b99){ width=240 }',
      ),
      tuple(
        '    ',
        '<figcaption>Example full-size output</figcaption>',
      ),
      tuple(
        '    ',
        '</figure>',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Do not format code (https://github.com/KyleKing/mdformat-mkdocs/issues/36). Also tested in `test_wrap` for resulting format]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      None,
      None,
      None,
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=5,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=5,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=5,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=5,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=5,
      ),
      None,
      None,
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=12,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=12,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=12,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=12,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='   ',
        start_line=12,
      ),
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='# A B C',
          indent='',
          line_num=0,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=1,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
          indent='',
          line_num=2,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='hooks. For example:',
          indent='   ',
          line_num=3,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=4,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```yaml',
          indent='   ',
          line_num=5,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='repos:',
          indent='   ',
          line_num=6,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='repos:',
            indent='   ',
            line_num=6,
            syntax=None,
          ),
        ]),
        parsed=ParsedLine(
          content='- repo: https://github.com/psf/black',
          indent='     ',
          line_num=7,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='repos:',
            indent='   ',
            line_num=6,
            syntax=None,
          ),
          ParsedLine(
            content='- repo: https://github.com/psf/black',
            indent='     ',
            line_num=7,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='rev: v24.4',
          indent='       ',
          line_num=8,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=9,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```',
          indent='   ',
          line_num=10,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=11,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```md',
          indent='   ',
          line_num=12,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='# Title',
          indent='   ',
          line_num=13,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='Content',
          indent='   ',
          line_num=14,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. Numbered List',
          indent='   ',
          line_num=15,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='1. Numbered List',
            indent='   ',
            line_num=15,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='* Unordered Sub-List',
          indent='     ',
          line_num=16,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
            indent='',
            line_num=2,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```',
          indent='   ',
          line_num=17,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '# A B C',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '',
        '1. Create a `.pre-commit-config.yaml` file in your repository and add the desired',
      ),
      tuple(
        '   ',
        'hooks. For example:',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '    ',
        '```yaml',
      ),
      tuple(
        '    ',
        'repos:',
      ),
      tuple(
        '      ',
        '- repo: https://github.com/psf/black',
      ),
      tuple(
        '        ',
        'rev: v24.4',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '    ',
        '```',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '    ',
        '```md',
      ),
      tuple(
        '    ',
        '# Title',
      ),
      tuple(
        '    ',
        'Content',
      ),
      tuple(
        '    ',
        '1. Numbered List',
      ),
      tuple(
        '      ',
        '* Unordered Sub-List',
      ),
      tuple(
        '    ',
        '```',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Handle Jagged Indents 2x]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      None,
      None,
      None,
      None,
      None,
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 2',
          indent='  ',
          line_num=1,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 3',
          indent='    ',
          line_num=2,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 3',
            indent='    ',
            line_num=2,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 4',
          indent='      ',
          line_num=3,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 3',
            indent='    ',
            line_num=2,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 4',
            indent='      ',
            line_num=3,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 5',
          indent='        ',
          line_num=4,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 6',
          indent='    ',
          line_num=5,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='- item 3',
            indent='    ',
            line_num=2,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- item 7',
          indent='    ',
          line_num=6,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='- item 6',
            indent='    ',
            line_num=5,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
          ParsedLine(
            content='- item 3',
            indent='    ',
            line_num=2,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='- item 8',
          indent='',
          line_num=7,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '- item 1',
      ),
      tuple(
        '    ',
        '- item 2',
      ),
      tuple(
        '        ',
        '- item 3',
      ),
      tuple(
        '            ',
        '- item 4',
      ),
      tuple(
        '                ',
        '- item 5',
      ),
      tuple(
        '        ',
        '- item 6',
      ),
      tuple(
        '        ',
        '- item 7',
      ),
      tuple(
        '',
        '- item 8',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Nested Python Classes. Resolves #13: https://github.com/KyleKing/mdformat-mkdocs/issues/13]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='    ',
        start_line=2,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='    ',
        start_line=2,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='    ',
        start_line=2,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='    ',
        start_line=2,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='    ',
        start_line=2,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='    ',
        start_line=2,
      ),
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='1. Add a serializer class',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=1,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```python',
          indent='    ',
          line_num=2,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
          indent='    ',
          line_num=3,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
            indent='    ',
            line_num=3,
            syntax=None,
          ),
        ]),
        parsed=ParsedLine(
          content='"""Used to retrieve recurring_event info"""',
          indent='        ',
          line_num=4,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=5,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
            indent='    ',
            line_num=3,
            syntax=None,
          ),
        ]),
        parsed=ParsedLine(
          content='class Meta:',
          indent='        ',
          line_num=6,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
            indent='    ',
            line_num=3,
            syntax=None,
          ),
          ParsedLine(
            content='class Meta:',
            indent='        ',
            line_num=6,
            syntax=None,
          ),
        ]),
        parsed=ParsedLine(
          content='model = RecurringEvent  # (2)!',
          indent='            ',
          line_num=7,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```',
          indent='    ',
          line_num=8,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '1. Add a serializer class',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '    ',
        '```python',
      ),
      tuple(
        '    ',
        'class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
      ),
      tuple(
        '        ',
        '"""Used to retrieve recurring_event info"""',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '        ',
        'class Meta:',
      ),
      tuple(
        '            ',
        'model = RecurringEvent  # (2)!',
      ),
      tuple(
        '    ',
        '```',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Numbered list]
  ParsedText(
    debug_block_indents=list([
      None,
      None,
      None,
      None,
      None,
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='1. item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. item 2-a',
          indent='    ',
          line_num=1,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='1. item 2-a',
            indent='    ',
            line_num=1,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. item 3-a',
          indent='        ',
          line_num=2,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='2. item 2-b',
          indent='    ',
          line_num=3,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='1. item 2-a',
            indent='    ',
            line_num=1,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='2. item 2-b',
            indent='    ',
            line_num=3,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. item 3-b',
          indent='        ',
          line_num=4,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
          ParsedLine(
            content='2. item 2-b',
            indent='    ',
            line_num=3,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='2. item 3-b',
          indent='        ',
          line_num=5,
          syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='1. item 3-b',
            indent='        ',
            line_num=4,
            syntax=<Syntax.LIST_NUMBERED: 'LIST_NUMBERED'>,
          ),
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '1. item 1',
      ),
      tuple(
        '    ',
        '1. item 2-a',
      ),
      tuple(
        '        ',
        '1. item 3-a',
      ),
      tuple(
        '    ',
        '1. item 2-b',
      ),
      tuple(
        '        ',
        '1. item 3-b',
      ),
      tuple(
        '        ',
        '1. item 3-b',
      ),
    ]),
  )
# ---
# name: test_parsed_result[Support inline bulleted code (https://github.com/KyleKing/mdformat-mkdocs/issues/40)]
  ParsedText(
    debug_block_indents=list([
      BlockIndent(
        indent_depth=0,
        kind='code',
        raw_indent='',
        start_line=0,
      ),
      BlockIndent(
        indent_depth=0,
        kind='code',
        raw_indent='',
        start_line=0,
      ),
      BlockIndent(
        indent_depth=0,
        kind='code',
        raw_indent='',
        start_line=0,
      ),
      None,
      None,
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='  ',
        start_line=5,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='  ',
        start_line=5,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='  ',
        start_line=5,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='  ',
        start_line=5,
      ),
      None,
      None,
      BlockIndent(
        indent_depth=2,
        kind='code',
        raw_indent='    ',
        start_line=11,
      ),
      BlockIndent(
        indent_depth=2,
        kind='code',
        raw_indent='    ',
        start_line=11,
      ),
      None,
      None,
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='  ',
        start_line=15,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='  ',
        start_line=15,
      ),
      BlockIndent(
        indent_depth=1,
        kind='code',
        raw_indent='  ',
        start_line=15,
      ),
      None,
      None,
      BlockIndent(
        indent_depth=0,
        kind='code',
        raw_indent='',
        start_line=20,
      ),
      BlockIndent(
        indent_depth=0,
        kind='code',
        raw_indent='',
        start_line=20,
      ),
      BlockIndent(
        indent_depth=0,
        kind='code',
        raw_indent='',
        start_line=20,
      ),
      BlockIndent(
        indent_depth=0,
        kind='code',
        raw_indent='',
        start_line=20,
      ),
      None,
    ]),
    lines=list([
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='- ```python',
          indent='',
          line_num=0,
          syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='for idx in range(10):',
          indent='  ',
          line_num=1,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='for idx in range(10):',
            indent='  ',
            line_num=1,
            syntax=None,
          ),
        ]),
        parsed=ParsedLine(
          content='print(idx)',
          indent='      ',
          line_num=2,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```',
          indent='  ',
          line_num=3,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=4,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='1. ```bash',
          indent='  ',
          line_num=5,
          syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='for match in %(ls);',
          indent='     ',
          line_num=6,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
          ParsedLine(
            content='for match in %(ls);',
            indent='     ',
            line_num=6,
            syntax=None,
          ),
        ]),
        parsed=ParsedLine(
          content='do echo match;',
          indent='         ',
          line_num=7,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='done',
          indent='     ',
          line_num=8,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```',
          indent='     ',
          line_num=9,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=10,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- ```powershell',
          indent='    ',
          line_num=11,
          syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
          ParsedLine(
            content='- ```powershell',
            indent='    ',
            line_num=11,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content="iex (new-object net.webclient).DownloadString('https://get.scoop.sh')",
          indent='      ',
          line_num=12,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
          ParsedLine(
            content='- ```powershell',
            indent='    ',
            line_num=11,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```',
          indent='      ',
          line_num=13,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=14,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```txt',
          indent='  ',
          line_num=15,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='- First Line',
          indent='  ',
          line_num=16,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
          ParsedLine(
            content='1. ```bash',
            indent='  ',
            line_num=5,
            syntax=<Syntax.CODE_NUMBERED: 'CODE_NUMBERED'>,
          ),
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
          ParsedLine(
            content='- First Line',
            indent='  ',
            line_num=16,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='Second Line',
          indent='    ',
          line_num=17,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='- ```python',
            indent='',
            line_num=0,
            syntax=<Syntax.CODE_BULLETED: 'CODE_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='```',
          indent='  ',
          line_num=18,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='',
          indent='',
          line_num=19,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='```yaml',
          indent='',
          line_num=20,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='repos:',
          indent='',
          line_num=21,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='repos:',
            indent='',
            line_num=21,
            syntax=None,
          ),
        ]),
        parsed=ParsedLine(
          content='- repo: https://github.com/psf/black',
          indent=' ',
          line_num=22,
          syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
          ParsedLine(
            content='repos:',
            indent='',
            line_num=21,
            syntax=None,
          ),
          ParsedLine(
            content='- repo: https://github.com/psf/black',
            indent=' ',
            line_num=22,
            syntax=<Syntax.LIST_BULLETED: 'LIST_BULLETED'>,
          ),
        ]),
        parsed=ParsedLine(
          content='rev: v24.4',
          indent='   ',
          line_num=23,
          syntax=None,
        ),
        prev_list_peers=list([
        ]),
      ),
      LineResult(
        parents=list([
        ]),
        parsed=ParsedLine(
          content='```',
          indent='',
          line_num=24,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        prev_list_peers=list([
        ]),
      ),
    ]),
    new_lines=list([
      tuple(
        '',
        '- ```python',
      ),
      tuple(
        '  ',
        'for idx in range(10):',
      ),
      tuple(
        '      ',
        'print(idx)',
      ),
      tuple(
        '    ',
        '```',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '    ',
        '1. ```bash',
      ),
      tuple(
        '       ',
        'for match in %(ls);',
      ),
      tuple(
        '           ',
        'do echo match;',
      ),
      tuple(
        '       ',
        'done',
      ),
      tuple(
        '        ',
        '```',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '        ',
        '- ```powershell',
      ),
      tuple(
        '          ',
        "iex (new-object net.webclient).DownloadString('https://get.scoop.sh')",
      ),
      tuple(
        '            ',
        '```',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '    ',
        '```txt',
      ),
      tuple(
        '    ',
        '- First Line',
      ),
      tuple(
        '      ',
        'Second Line',
      ),
      tuple(
        '    ',
        '```',
      ),
      tuple(
        '',
        '',
      ),
      tuple(
        '',
        '```yaml',
      ),
      tuple(
        '',
        'repos:',
      ),
      tuple(
        ' ',
        '- repo: https://github.com/psf/black',
      ),
      tuple(
        '   ',
        'rev: v24.4',
      ),
      tuple(
        '',
        '```',
      ),
    ]),
  )
# ---

# serializer version: 1
# name: test_parsed_result[Combination list]
  ParsedText(
    code_block_indents=list([
      None,
      None,
      None,
    ]),
    lines=list([
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='* item 2',
          indent='    ',
          line_num=1,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='* item 2',
            indent='    ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='1. item 3',
          indent='        ',
          line_num=2,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
    ]),
    new_contents=list([
      '- item 1',
      '- item 2',
      '1. item 3',
    ]),
    new_indents=list([
      '',
      '    ',
      '        ',
    ]),
  )
# ---
# name: test_parsed_result[Corrected Indentation from 3x]
  ParsedText(
    code_block_indents=list([
      None,
      None,
      None,
      None,
    ]),
    lines=list([
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 2',
          indent='   ',
          line_num=1,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='   ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 3',
          indent='      ',
          line_num=2,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='   ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 3',
            indent='      ',
            line_num=2,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 4',
          indent='         ',
          line_num=3,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
    ]),
    new_contents=list([
      '- item 1',
      '- item 2',
      '- item 3',
      '- item 4',
    ]),
    new_indents=list([
      '',
      '    ',
      '        ',
      '            ',
    ]),
  )
# ---
# name: test_parsed_result[Dashed list]
  ParsedText(
    code_block_indents=list([
      None,
      None,
    ]),
    lines=list([
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 2',
          indent='    ',
          line_num=1,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
    ]),
    new_contents=list([
      '- item 1',
      '- item 2',
    ]),
    new_indents=list([
      '',
      '    ',
    ]),
  )
# ---
# name: test_parsed_result[Handle Jagged Indents 2x]
  ParsedText(
    code_block_indents=list([
      None,
      None,
      None,
      None,
      None,
      None,
      None,
      None,
    ]),
    lines=list([
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='- item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 2',
          indent='  ',
          line_num=1,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 3',
          indent='    ',
          line_num=2,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 3',
            indent='    ',
            line_num=2,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 4',
          indent='      ',
          line_num=3,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 3',
            indent='    ',
            line_num=2,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 4',
            indent='      ',
            line_num=3,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 5',
          indent='        ',
          line_num=4,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 6',
          indent='    ',
          line_num=5,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='- item 2',
            indent='  ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='- item 7',
          indent='    ',
          line_num=6,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
          ParsedLine(
            content='- item 6',
            indent='    ',
            line_num=5,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
      }),
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='- item 8',
          indent='',
          line_num=7,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
          ParsedLine(
            content='- item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
      }),
    ]),
    new_contents=list([
      '- item 1',
      '- item 2',
      '- item 3',
      '- item 4',
      '- item 5',
      '- item 6',
      '- item 7',
      '- item 8',
    ]),
    new_indents=list([
      '',
      '    ',
      '        ',
      '            ',
      '                ',
      '        ',
      '        ',
      '',
    ]),
  )
# ---
# name: test_parsed_result[Nested Python Classes. Resolves #13: https://github.com/KyleKing/mdformat-mkdocs/issues/13]
  ParsedText(
    code_block_indents=list([
      None,
      None,
      BlockIndent(
        indent_depth=1,
        raw_indent='    ',
      ),
      BlockIndent(
        indent_depth=1,
        raw_indent='    ',
      ),
      BlockIndent(
        indent_depth=1,
        raw_indent='    ',
      ),
      BlockIndent(
        indent_depth=1,
        raw_indent='    ',
      ),
      BlockIndent(
        indent_depth=1,
        raw_indent='    ',
      ),
      BlockIndent(
        indent_depth=1,
        raw_indent='    ',
      ),
      None,
    ]),
    lines=list([
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='1. Add a serializer class',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='',
          indent='',
          line_num=1,
          syntax=None,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='```python',
          indent='    ',
          line_num=2,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
          indent='    ',
          line_num=3,
          syntax=None,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
            indent='    ',
            line_num=3,
            syntax=None,
          ),
        ]),
        'parsed': ParsedLine(
          content='"""Used to retrieve recurring_event info"""',
          indent='        ',
          line_num=4,
          syntax=None,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='',
          indent='',
          line_num=5,
          syntax=None,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
            indent='    ',
            line_num=3,
            syntax=None,
          ),
        ]),
        'parsed': ParsedLine(
          content='class Meta:',
          indent='        ',
          line_num=6,
          syntax=None,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
            indent='    ',
            line_num=3,
            syntax=None,
          ),
          ParsedLine(
            content='class Meta:',
            indent='        ',
            line_num=6,
            syntax=None,
          ),
        ]),
        'parsed': ParsedLine(
          content='model = RecurringEvent  # (2)!',
          indent='            ',
          line_num=7,
          syntax=None,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. Add a serializer class',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='```',
          indent='    ',
          line_num=8,
          syntax=<Syntax.EDGE_CODE: 'EDGE_CODE'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
    ]),
    new_contents=list([
      '1. Add a serializer class',
      '',
      '```python',
      'class RecurringEventSerializer(serializers.ModelSerializer):  # (1)!',
      '"""Used to retrieve recurring_event info"""',
      '',
      'class Meta:',
      'model = RecurringEvent  # (2)!',
      '```',
    ]),
    new_indents=list([
      '',
      '',
      '    ',
      '    ',
      '        ',
      '',
      '        ',
      '            ',
      '    ',
    ]),
  )
# ---
# name: test_parsed_result[Numbered list]
  ParsedText(
    code_block_indents=list([
      None,
      None,
      None,
      None,
      None,
      None,
    ]),
    lines=list([
      dict({
        'parents': list([
        ]),
        'parsed': ParsedLine(
          content='1. item 1',
          indent='',
          line_num=0,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='1. item 2-a',
          indent='    ',
          line_num=1,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='1. item 2-a',
            indent='    ',
            line_num=1,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='1. item 3-a',
          indent='        ',
          line_num=2,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='2. item 2-b',
          indent='    ',
          line_num=3,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='2. item 2-b',
            indent='    ',
            line_num=3,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='1. item 3-b',
          indent='        ',
          line_num=4,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
          ParsedLine(
            content='1. item 3-a',
            indent='        ',
            line_num=2,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
      }),
      dict({
        'parents': list([
          ParsedLine(
            content='1. item 1',
            indent='',
            line_num=0,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='2. item 2-b',
            indent='    ',
            line_num=3,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
        'parsed': ParsedLine(
          content='2. item 3-b',
          indent='        ',
          line_num=5,
          syntax=<Syntax.LIST: 'LIST'>,
        ),
        'prev_list_peers': list([
          ParsedLine(
            content='1. item 3-b',
            indent='        ',
            line_num=4,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
          ParsedLine(
            content='1. item 3-a',
            indent='        ',
            line_num=2,
            syntax=<Syntax.LIST: 'LIST'>,
          ),
        ]),
      }),
    ]),
    new_contents=list([
      '1. item 1',
      '1. item 2-a',
      '1. item 3-a',
      '1. item 2-b',
      '1. item 3-b',
      '1. item 3-b',
    ]),
    new_indents=list([
      '',
      '    ',
      '        ',
      '    ',
      '        ',
      '        ',
    ]),
  )
# ---
